name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  style-python:
    name: "üíÑ Style: python"
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.3

      - name: Setup python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # pin@v4.7.0
        with:
          python-version: 3.11

      - name: Install style check dependencies
        run: |
          pip install -U ruff
          pip install -U wheel setuptools twine build

      - name: Check style
        run: ruff check

      - name: Build Plugin
        run: python -m build

  style-js:
    name: "üíÑ Style: js"
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.3

      - name: Setup node
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # pin@v3.7.0
        with:
          node-version: "22"

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Check style
        run: cd frontend && npm run lint

  build-js:
    name: "üèóÔ∏è Build: js"
    needs: [style-js]
    if: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.3

      - name: Setup node
        uses: actions/setup-node@e33196f7422957bea03ed53f6fbb155025ffc7b8 # pin@v3.7.0
        with:
          node-version: "22"

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Build js
        run: cd frontend && npm run build

      - name: Upload frontend artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # pin@v4.6.2
        with:
          name: frontend
          path: report_lsp/static/dist

  publish:
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [style-python, build-js]
    name: üì¶ Publish to PyPi
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/inventree-report-lsp-plugin
    permissions:
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # pin@v3.5.3

      - name: Setup python
        uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # pin@v4.7.0
        with:
          python-version: 3.11

      - name: Install build dependencies
        run: pip install --upgrade wheel setuptools twine build

      - name: Download frontend artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # pin@v4.2.1
        with:
          name: frontend
          path: report_lsp/static/dist

      - name: Build pip package
        run: python3 -m build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # pin@v1.12.4
